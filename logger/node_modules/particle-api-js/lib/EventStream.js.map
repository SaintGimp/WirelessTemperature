{"version":3,"sources":["../src/EventStream.js"],"names":[],"mappings":"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","file":"EventStream.js","sourcesContent":["/* eslint max-depth: 0 */\nimport http from 'http';\nimport https from 'https';\nimport url from 'url';\nimport { EventEmitter } from 'events';\n\nclass EventStream extends EventEmitter {\n\tconstructor(uri, token, options) {\n\t\tsuper();\n\t\tthis.uri = uri;\n\t\tthis.token = token;\n\t\tthis.reconnectInterval = 2000;\n\t\tObject.assign(this, options);\n\t}\n\n\tconnect() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst { hostname, protocol, port, path } = url.parse(this.uri);\n\t\t\tthis.origin = `${protocol}//${hostname}${port ? (':' + port) : ''}`;\n\n\t\t\tconst isSecure = protocol === 'https:';\n\t\t\tconst requestor = isSecure ? https : http;\n\t\t\tconst req = requestor.request({\n\t\t\t\thostname,\n\t\t\t\tprotocol,\n\t\t\t\tpath: `${path}?history_limit=30&access_token=${this.token}`,\n\t\t\t\tmethod: 'get',\n\t\t\t\tport: port || (isSecure ? 443 : 80),\n\t\t\t\tavoidFetch: true,\n\t\t\t\tmode: 'prefer-streaming'\n\t\t\t});\n\n\t\t\tthis.req = req;\n\t\t\tif (this.debug) {\n\t\t\t\tthis.debug(this);\n\t\t\t}\n\n\t\t\treq.on('error', e => {\n\t\t\t\treject({ error: e, errorDescription: `Network error from ${this.uri}` });\n\t\t\t});\n\n\t\t\treq.on('response', res => {\n\t\t\t\tconst statusCode = res.statusCode;\n\t\t\t\tif (statusCode !== 200) {\n\t\t\t\t\tlet body = '';\n\t\t\t\t\tres.on('data', chunk => body += chunk);\n\t\t\t\t\tres.on('end', () => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tbody = JSON.parse(body);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\tthis.emit('response', {\n\t\t\t\t\t\t\tstatusCode,\n\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet errorDescription = `HTTP error ${statusCode} from ${this.uri}`;\n\t\t\t\t\t\tif (body && body.error_description) {\n\t\t\t\t\t\t\terrorDescription += ' - ' + body.error_description;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treject({ statusCode, errorDescription, body });\n\t\t\t\t\t\tthis.req = undefined;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.data = '';\n\t\t\t\tthis.buf = '';\n\t\t\t\tthis.eventName;\n\t\t\t\tthis.lastEventId;\n\n\t\t\t\tres.on('data', this.parse.bind(this));\n\t\t\t\tres.once('end', this.end.bind(this));\n\t\t\t\tresolve(this);\n\t\t\t});\n\t\t\treq.end();\n\t\t});\n\t}\n\n\tabort() {\n\t\tif (this.req) {\n\t\t\tthis.req.abort();\n\t\t\tthis.req = undefined;\n\t\t}\n\t\tthis.removeAllListeners();\n\t}\n\n\tend() {\n\t\tthis.req = undefined;\n\t\tsetTimeout(() => {\n\t\t\tthis.connect().catch(err => {\n\t\t\t\tthis.emit('error', err);\n\t\t\t\tthis.removeAllListeners();\n\t\t\t});\n\t\t}, this.reconnectInterval);\n\t}\n\n\tparse(chunk) {\n\t\tthis.buf += chunk;\n\t\tlet pos = 0;\n\t\tlet length = this.buf.length;\n\t\tlet discardTrailingNewline = false;\n\n\t\twhile (pos < length) {\n\t\t\tif (discardTrailingNewline) {\n\t\t\t\tif (this.buf[pos] === '\\n') {\n\t\t\t\t\t++pos;\n\t\t\t\t}\n\t\t\t\tdiscardTrailingNewline = false;\n\t\t\t}\n\n\t\t\tlet lineLength = -1;\n\t\t\tlet fieldLength = -1;\n\n\t\t\tfor (let i = pos; lineLength < 0 && i < length; ++i) {\n\t\t\t\tconst c = this.buf[i];\n\t\t\t\tif (c === ':') {\n\t\t\t\t\tif (fieldLength < 0) {\n\t\t\t\t\t\tfieldLength = i - pos;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '\\r') {\n\t\t\t\t\tdiscardTrailingNewline = true;\n\t\t\t\t\tlineLength = i - pos;\n\t\t\t\t} else if (c === '\\n') {\n\t\t\t\t\tlineLength = i - pos;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lineLength < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.parseEventStreamLine(pos, fieldLength, lineLength);\n\n\t\t\tpos += lineLength + 1;\n\t\t}\n\n\t\tif (pos === length) {\n\t\t\tthis.buf = '';\n\t\t} else if (pos > 0) {\n\t\t\tthis.buf = this.buf.slice(pos);\n\t\t}\n\t}\n\n\tparseEventStreamLine(pos, fieldLength, lineLength) {\n\t\tif (lineLength === 0) {\n\t\t\ttry {\n\t\t\t\tif (this.data.length > 0 && this.eventName) {\n\t\t\t\t\tconst event = JSON.parse(this.data);\n\t\t\t\t\tevent.name = this.eventName;\n\t\t\t\t\tthis.emit(this.eventName, event);\n\t\t\t\t\tthis.emit('event', event);\n\t\t\t\t\tthis.data = '';\n\t\t\t\t}\n\t\t\t\tthis.eventName = undefined;\n\t\t\t} catch (e) {\n\t\t\t\t// do nothing if JSON.parse fails\n\t\t\t}\n\t\t} else if (fieldLength > 0) {\n\t\t\tconst field = this.buf.slice(pos, pos + fieldLength);\n\t\t\tlet step = 0;\n\n\t\t\tif (this.buf[pos + fieldLength + 1] !== ' ') {\n\t\t\t\tstep = fieldLength + 1;\n\t\t\t} else {\n\t\t\t\tstep = fieldLength + 2;\n\t\t\t}\n\t\t\tpos += step;\n\t\t\tconst valueLength = lineLength - step;\n\t\t\tconst value = this.buf.slice(pos, pos + valueLength);\n\n\t\t\tif (field === 'data') {\n\t\t\t\tthis.data += value + '\\n';\n\t\t\t} else if (field === 'event') {\n\t\t\t\tthis.eventName = value;\n\t\t\t} else if (field === 'id') {\n\t\t\t\tthis.lastEventId = value;\n\t\t\t} else if (field === 'retry') {\n\t\t\t\tconst retry = parseInt(value, 10);\n\t\t\t\tif (!Number.isNaN(retry)) {\n\t\t\t\t\tthis.reconnectInterval = retry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default EventStream;\n"]}